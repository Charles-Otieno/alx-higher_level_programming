# Test cases for matrix_divided function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test cases for TypeError
>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [4, 5, "6"]], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("not_a_matrix", 4)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "not_a_number")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test cases for ZeroDivisionError
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Additional test cases
>>> matrix_divided([], 3)
[]

>>> matrix_divided([[1, 2], [3, 4], [5, 6]], 2)
[[0.5, 1.0], [1.5, 2.0], [2.5, 3.0]]

>>> matrix_divided([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]], 1.5)
[[1.0, 1.67, 2.33], [3.0, 3.67, 4.33]]

